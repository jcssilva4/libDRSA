#ifndef DRSA_H
#define DRSA_H

#include "Obj.h"

class DRSA
{
    public:
        DRSA(int, int, int*, int, float**);
        virtual ~DRSA();
        vector<Obj*> get_upClt(int); // compute upward union of classes s>=t

    protected:

    private:
        int nObj;
        int nCriteria;
        int nClasses;
        vector<int> prefDir; //criteria monotonic restrictions directions (preference direction - max=1,min=-1)
        vector<Obj*> Universe;
        // Universe Partitions
        vector<vector<Obj*>> Clt_up; // upward union of classes (Clt = {x | x belongs to Cls, s>=t})
        vector<vector<Obj*>> Clt_down; // downward union of classes (Clt = {x | x belongs to Cls, s<=t})
};

#endif // DRSA_H
